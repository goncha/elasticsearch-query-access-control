apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'org.elasticsearch'
version = '1.2-SNAPSHOT'

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.elasticsearch:elasticsearch:1.1.0'
    testCompile 'junit:junit:4.11'
    testRuntime 'log4j:log4j:1.2.17'

    deployerJars 'org.apache.maven.wagon:wagon-http:2.2'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand(version: version)
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'elasticsearch-query-access-control-filter', 'Implementation-Version': version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java
}

artifacts { archives sourcesJar }

test {
    testLogging {
        events 'started', 'passed'
    }
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: nexusReleasesUrl) {
            // defined in ~/.gradle/gradle.properties
            // or pass to gradle -DnexusUserName=XXXX ...
            authentication(userName: nexusUserName, password: nexusPassword)
        }
        snapshotRepository(url: nexusSnapshotsUrl) {
            authentication(userName: nexusUserName, password: nexusPassword)
        }
    }
}

task benchmarkLC(type: JavaExec, dependsOn: 'testClasses') {
    main 'org.apache.lucene.search.LuceneAccessControlFilterBenchmark'
    classpath sourceSets.test.runtimeClasspath
    jvmArgs '-server', '-Xms512m', '-Xmx512m'
}

task benchmarkES(type: JavaExec, dependsOn: 'testClasses') {
    main 'org.elasticsearch.index.query.ElasticSearchAccessControlFilterBenchmark'
    classpath sourceSets.test.runtimeClasspath
    jvmArgs '-server', '-Xms128m', '-Xmx512m'
}
